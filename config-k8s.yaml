# MIT License
#
# Copyright (c) 2021 Mert Bora Alper and EASE lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Broker: my-broker
# =================
apiVersion: eventing.knative.dev/v1
kind: Broker # Broker is a Knative resource that acts as a message bus. It is a central hub for events that are sent to the cluster. It is a central hub for events that are sent to the cluster.
metadata:
  name: my-broker

---

# Deployment: ease-pipeline-server
# ================================
apiVersion: apps/v1
kind: Deployment # Deployment is a Kubernetes resource that manages a set of identical Pods. It is a Kubernetes resource that manages a set of identical Pods.
metadata:
  name: ease-pipeline-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ease-pipeline-server
  template:
    metadata:
      labels:
        app: ease-pipeline-server
    spec:
      containers:
        - name: ease-pipeline-server
          image: docker.io/vhiveease/ease-pipeline-server:latest
          imagePullPolicy: Always

---

# SinkBinding: ease-pipeline-server
# =================================

apiVersion: sources.knative.dev/v1
kind: SinkBinding  # SinkBinding is a Knative resource that allows you to bind a PodSpecable to a Sink. It allows you to bind a PodSpecable to a Sink.
metadata:
  name: bind-ease-pipeline-server
spec:
  subject:
    apiVersion: apps/v1
    kind: Deployment
    name: ease-pipeline-server
  sink:
    ref:
      apiVersion: eventing.knative.dev/v1
      kind: Broker
      name: my-broker

---

# Service: ease-pipeline-server
# =============================
kind: Service
apiVersion: v1
metadata:
  name: ease-pipeline-server
spec:
  type: NodePort
  selector:
    app: ease-pipeline-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30002

---

# Deployment: ease-pipeline-temp-consumer
# =======================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ease-pipeline-temp-consumer
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: ease-pipeline-temp-consumer
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: ease-pipeline-temp-consumer
          image: docker.io/vhiveease/ease-pipeline-temp-consumer:latest
          imagePullPolicy: Always

---

# Service: ease-pipeline-temp-consumer
# ====================================
kind: Service
apiVersion: v1
metadata:
  name: ease-pipeline-temp-consumer
spec:
  selector:
    app: ease-pipeline-temp-consumer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

# Deployment: ease-pipeline-overheat-consumer
# ===========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ease-pipeline-overheat-consumer
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: ease-pipeline-overheat-consumer
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: ease-pipeline-overheat-consumer
          image: docker.io/vhiveease/ease-pipeline-overheat-consumer:latest
          imagePullPolicy: Always

---

# Service: ease-pipeline-overheat-consumer
# ========================================
kind: Service
apiVersion: v1
metadata:
  name: ease-pipeline-overheat-consumer
spec:
  selector:
    app: ease-pipeline-overheat-consumer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

# Trigger: for temp-consumer
# ==========================
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: temp-consumer-trigger
spec:
  broker: my-broker
  filter:
    attributes:
      type: temp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: ease-pipeline-temp-consumer

---

# Trigger: for overheat-consumer
# ==============================
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: overheat-consumer-trigger
spec:
  broker: my-broker
  filter:
    attributes:
      type: overheat
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: ease-pipeline-overheat-consumer
